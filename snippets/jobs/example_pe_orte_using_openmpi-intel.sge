#!/bin/bash
# example_pe_orte_using_openmpi-intel.sge
# 
# This script uses the tight integration of openmpi-1.4.3-intel-12.1 in SGE
# using the parallel environment (PE) "orte".  
# This script must be used only with qsub command - do NOT run it as a stand-alone 
# shell script because it will start all processes on the local node.   
 
# Define your job name, parallel environment with the number of slots, and run time: 
#$ -cwd
#$ -N example_pe_orte_using_openmpi-intel_np24
#$ -pe orte 24
#$ -l s_rt=00:04:00,h_rt=00:04:30

###################################################
# Fix the SGE environment-handling bug (bash):
source /usr/share/Modules/init/sh
export -n -f module

# Load the environment modules for this job (the order may be important): 
module add intel/intel-12.1_intel64  
module add mpi/openmpi-1.4.3-intel-12.1
###################################################
# Set the environment variables:
MPIEXEC=$OPENMPI/bin/mpiexec
# OPENMPI is set by the mpi/openmpi-1.4.3-intel-12.1 module.

export OMP_NUM_THREADS=1
export OMPI_MCA_btl='openib,sm,self'
# export OMPI_MCA_orte_process_binding=core

##############
# BEGIN DEBUG 
# Print the SGE environment on master host: 
echo "================================================================"
echo "=== SGE job  JOB_NAME=$JOB_NAME  JOB_ID=$JOB_ID"
echo "================================================================"
echo DATE=`date`
echo HOSTNAME=`hostname`
echo PWD=`pwd`
echo "NSLOTS=$NSLOTS"
echo "PE_HOSTFILE=$PE_HOSTFILE"
cat $PE_HOSTFILE
echo "================================================================"
echo "Running environment:"
env
echo "================================================================"
echo "Loaded environment modules:"
module list 2>&1
echo
# END DEBUG 
##############

###################################################
# The command to run with mpiexec:  
# CMD=$HOME/bin/xhpl-OpenMPI_Intel-12.1
CMD=/bin/hostname
ARGS=''

##############
# BEGIN DEBUG 
# Check that the libraries are available (on the master host):  
echo "ldd $CMD"
ldd $CMD 
echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
# Check the number of threads used by OpenMP: 
echo "OMP_NUM_THREADS=$OMP_NUM_THREADS"
# END DEBUG 
##############

# The MPI command (without "-machinefile <machines>") to run under the control of SGE (PE orte): 
MPICMD="$MPIEXEC --prefix $OPENMPI -x LD_LIBRARY_PATH -x OMP_NUM_THREADS -x OMPI_MCA_btl -np $NSLOTS $CMD $ARGS"
echo "Command to run:"
echo "$MPICMD"
echo
$MPICMD

###################################################
